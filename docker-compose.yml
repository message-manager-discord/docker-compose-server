version: "3.8"

services:

  grafana:
    image: grafana/grafana:7.3.6

    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false

    depends_on:
      - prometheus
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
    - 9090:9090
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    - '--storage.tsdb.path=/prometheus'
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    depends_on:
    - cadvisor
    - api
    - gateway
    restart: unless-stopped
  
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped

  
  cloudflared:
    image: cloudflare/cloudflared:latest
    restart: always
    command: "tunnel --no-autoupdate --config /etc/cloudflared/config.yml run --token TOKEN_HERE"
    volumes:
      - ./cloudflared:/etc/cloudflared
    links:
      - api:api
    depends_on:
      - api
  api: 
    image: ghcr.io/message-manager-discord/backend:2
    restart: always
    env_file:
      - .backend.env
    depends_on:
      - gateway
      - redisapicache
      - postgres


    command: >
      sh -c "npm run migrate && npm run start"

  postgres:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=user
      - POSTGRES_DB=db
      - POSTGRES_PASSWORD=passsadfl8jn3a01m
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts:/scripts

  redisapicache:
    image: redislabs/rejson:latest

  gateway:
    image: ghcr.io/message-manager-discord/gateway:2
    restart: always
    env_file:
      - .gateway.env

      

    depends_on:
      - redisgw

  redisgw:
    image: redislabs/rejson:latest
    restart: always

volumes:
  postgres-data: {}
  prometheus_data: {}
  grafana_data: {}
